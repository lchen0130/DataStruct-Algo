import org.junit.Before;
import org.junit.Test;

import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;

import static org.junit.Assert.*;

/**
 * AVL tests.
 * @author Timothy Gregg
 * @version 1.0
 */
public class TGreggStressTestRound2 {

    private AVLInterface<Integer> avlTree;

    @Before
    public void setup() {
        avlTree = new AVL<>();
    }

    @Test
    public void StressTestIsBestTest() {
        List<Integer> comparisonList;
        assertEquals(0, avlTree.size());
        avlTree.add(127088126);
        Integer[] comparisonArr0 = {127088126};
        assertEquals(1, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr0));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1856209620);
        Integer[] comparisonArr1 = {127088126, 1856209620};
        assertEquals(2, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr1));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(228568128);
        Integer[] comparisonArr2 = {228568128, 127088126, 1856209620};
        assertEquals(3, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr2));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(818776261);
        Integer[] comparisonArr3 = {228568128, 127088126, 1856209620, 818776261};
        assertEquals(4, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr3));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(2044077344);
        Integer[] comparisonArr4 = {228568128, 127088126, 1856209620, 818776261, 2044077344};
        assertEquals(5, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr4));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1075238511);
        Integer[] comparisonArr5 = {818776261, 228568128, 1856209620, 127088126, 1075238511, 2044077344};
        assertEquals(6, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr5));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1075238511, avlTree.remove(1075238511));
        Integer[] comparisonArr6 = {818776261, 228568128, 1856209620, 127088126, 2044077344};
        assertEquals(5, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr6));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(494718237);
        Integer[] comparisonArr7 = {818776261, 228568128, 1856209620, 127088126, 494718237, 2044077344};
        assertEquals(6, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr7));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(669603926);
        Integer[] comparisonArr8 = {818776261, 228568128, 1856209620, 127088126, 494718237, 2044077344, 669603926};
        assertEquals(7, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr8));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(77990075);
        Integer[] comparisonArr9 = {818776261, 228568128, 1856209620, 127088126, 494718237, 2044077344, 77990075, 669603926};
        assertEquals(8, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr9));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 494718237, avlTree.remove(494718237));
        Integer[] comparisonArr10 = {818776261, 228568128, 1856209620, 127088126, 669603926, 2044077344, 77990075};
        assertEquals(7, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr10));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1612175489);
        Integer[] comparisonArr11 = {818776261, 228568128, 1856209620, 127088126, 669603926, 1612175489, 2044077344, 77990075};
        assertEquals(8, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr11));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(952456294);
        Integer[] comparisonArr12 = {818776261, 228568128, 1856209620, 127088126, 669603926, 1612175489, 2044077344, 77990075, 952456294};
        assertEquals(9, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr12));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1428508874);
        Integer[] comparisonArr13 = {818776261, 228568128, 1856209620, 127088126, 669603926, 1428508874, 2044077344, 77990075, 952456294, 1612175489};
        assertEquals(10, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr13));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1183004826);
        Integer[] comparisonArr14 = {818776261, 228568128, 1428508874, 127088126, 669603926, 952456294, 1856209620, 77990075, 1183004826, 1612175489, 2044077344};
        assertEquals(11, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr14));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1954834435);
        Integer[] comparisonArr15 = {818776261, 228568128, 1428508874, 127088126, 669603926, 952456294, 1856209620, 77990075, 1183004826, 1612175489, 2044077344, 1954834435};
        assertEquals(12, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr15));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(286087769);
        Integer[] comparisonArr16 = {818776261, 228568128, 1428508874, 127088126, 669603926, 952456294, 1856209620, 77990075, 286087769, 1183004826, 1612175489, 2044077344, 1954834435};
        assertEquals(13, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr16));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1099608254);
        Integer[] comparisonArr17 = {818776261, 228568128, 1428508874, 127088126, 669603926, 1099608254, 1856209620, 77990075, 286087769, 952456294, 1183004826, 1612175489, 2044077344, 1954834435};
        assertEquals(14, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr17));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(332747124);
        Integer[] comparisonArr18 = {818776261, 228568128, 1428508874, 127088126, 332747124, 1099608254, 1856209620, 77990075, 286087769, 669603926, 952456294, 1183004826, 1612175489, 2044077344, 1954834435};
        assertEquals(15, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr18));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(257581798);
        Integer[] comparisonArr19 = {818776261, 228568128, 1428508874, 127088126, 332747124, 1099608254, 1856209620, 77990075, 286087769, 669603926, 952456294, 1183004826, 1612175489, 2044077344, 257581798, 1954834435};
        assertEquals(16, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr19));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1188949433);
        Integer[] comparisonArr20 = {818776261, 228568128, 1428508874, 127088126, 332747124, 1099608254, 1856209620, 77990075, 286087769, 669603926, 952456294, 1183004826, 1612175489, 2044077344, 257581798, 1188949433, 1954834435};
        assertEquals(17, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr20));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 2044077344, avlTree.remove(2044077344));
        Integer[] comparisonArr21 = {818776261, 228568128, 1428508874, 127088126, 332747124, 1099608254, 1856209620, 77990075, 286087769, 669603926, 952456294, 1183004826, 1612175489, 1954834435, 257581798, 1188949433};
        assertEquals(16, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr21));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(2110441108);
        Integer[] comparisonArr22 = {818776261, 228568128, 1428508874, 127088126, 332747124, 1099608254, 1856209620, 77990075, 286087769, 669603926, 952456294, 1183004826, 1612175489, 1954834435, 257581798, 1188949433, 2110441108};
        assertEquals(17, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr22));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(60305122);
        Integer[] comparisonArr23 = {818776261, 228568128, 1428508874, 77990075, 332747124, 1099608254, 1856209620, 60305122, 127088126, 286087769, 669603926, 952456294, 1183004826, 1612175489, 1954834435, 257581798, 1188949433, 2110441108};
        assertEquals(18, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr23));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(2081284818);
        Integer[] comparisonArr24 = {818776261, 228568128, 1428508874, 77990075, 332747124, 1099608254, 1856209620, 60305122, 127088126, 286087769, 669603926, 952456294, 1183004826, 1612175489, 2081284818, 257581798, 1188949433, 1954834435, 2110441108};
        assertEquals(19, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr24));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 669603926, avlTree.remove(669603926));
        Integer[] comparisonArr25 = {818776261, 228568128, 1428508874, 77990075, 332747124, 1099608254, 1856209620, 60305122, 127088126, 286087769, 952456294, 1183004826, 1612175489, 2081284818, 257581798, 1188949433, 1954834435, 2110441108};
        assertEquals(18, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr25));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1856209620, avlTree.remove(1856209620));
        Integer[] comparisonArr26 = {818776261, 228568128, 1428508874, 77990075, 332747124, 1099608254, 1612175489, 60305122, 127088126, 286087769, 952456294, 1183004826, 2081284818, 257581798, 1188949433, 1954834435, 2110441108};
        assertEquals(17, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr26));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1282755677);
        Integer[] comparisonArr27 = {818776261, 228568128, 1188949433, 77990075, 332747124, 1099608254, 1428508874, 60305122, 127088126, 286087769, 952456294, 1183004826, 1282755677, 1612175489, 257581798, 2081284818, 1954834435, 2110441108};
        assertEquals(18, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr27));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(933950708);
        Integer[] comparisonArr28 = {818776261, 228568128, 1188949433, 77990075, 332747124, 1099608254, 1428508874, 60305122, 127088126, 286087769, 952456294, 1183004826, 1282755677, 1612175489, 257581798, 933950708, 2081284818, 1954834435, 2110441108};
        assertEquals(19, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr28));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1562814634);
        Integer[] comparisonArr29 = {818776261, 228568128, 1188949433, 77990075, 332747124, 1099608254, 1612175489, 60305122, 127088126, 286087769, 952456294, 1183004826, 1428508874, 2081284818, 257581798, 933950708, 1282755677, 1562814634, 1954834435, 2110441108};
        assertEquals(20, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr29));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1391191267);
        Integer[] comparisonArr30 = {818776261, 228568128, 1188949433, 77990075, 332747124, 1099608254, 1612175489, 60305122, 127088126, 286087769, 952456294, 1183004826, 1428508874, 2081284818, 257581798, 933950708, 1282755677, 1562814634, 1954834435, 2110441108, 1391191267};
        assertEquals(21, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr30));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1976842930);
        Integer[] comparisonArr31 = {818776261, 228568128, 1188949433, 77990075, 332747124, 1099608254, 1612175489, 60305122, 127088126, 286087769, 952456294, 1183004826, 1428508874, 2081284818, 257581798, 933950708, 1282755677, 1562814634, 1954834435, 2110441108, 1391191267, 1976842930};
        assertEquals(22, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr31));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1201333422);
        Integer[] comparisonArr32 = {818776261, 228568128, 1188949433, 77990075, 332747124, 1099608254, 1612175489, 60305122, 127088126, 286087769, 952456294, 1183004826, 1428508874, 2081284818, 257581798, 933950708, 1282755677, 1562814634, 1954834435, 2110441108, 1201333422, 1391191267, 1976842930};
        assertEquals(23, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr32));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(955612091);
        Integer[] comparisonArr33 = {818776261, 228568128, 1188949433, 77990075, 332747124, 1099608254, 1612175489, 60305122, 127088126, 286087769, 952456294, 1183004826, 1428508874, 2081284818, 257581798, 933950708, 955612091, 1282755677, 1562814634, 1954834435, 2110441108, 1201333422, 1391191267, 1976842930};
        assertEquals(24, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr33));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1099608254, avlTree.remove(1099608254));
        Integer[] comparisonArr34 = {818776261, 228568128, 1188949433, 77990075, 332747124, 955612091, 1612175489, 60305122, 127088126, 286087769, 952456294, 1183004826, 1428508874, 2081284818, 257581798, 933950708, 1282755677, 1562814634, 1954834435, 2110441108, 1201333422, 1391191267, 1976842930};
        assertEquals(23, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr34));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(217359470);
        Integer[] comparisonArr35 = {818776261, 228568128, 1188949433, 77990075, 332747124, 955612091, 1612175489, 60305122, 127088126, 286087769, 952456294, 1183004826, 1428508874, 2081284818, 217359470, 257581798, 933950708, 1282755677, 1562814634, 1954834435, 2110441108, 1201333422, 1391191267, 1976842930};
        assertEquals(24, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr35));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1612175489, avlTree.remove(1612175489));
        Integer[] comparisonArr36 = {818776261, 228568128, 1188949433, 77990075, 332747124, 955612091, 1562814634, 60305122, 127088126, 286087769, 952456294, 1183004826, 1428508874, 2081284818, 217359470, 257581798, 933950708, 1282755677, 1954834435, 2110441108, 1201333422, 1391191267, 1976842930};
        assertEquals(23, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr36));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(637233199);
        Integer[] comparisonArr37 = {818776261, 228568128, 1188949433, 77990075, 332747124, 955612091, 1562814634, 60305122, 127088126, 286087769, 637233199, 952456294, 1183004826, 1428508874, 2081284818, 217359470, 257581798, 933950708, 1282755677, 1954834435, 2110441108, 1201333422, 1391191267, 1976842930};
        assertEquals(24, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr37));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(984627915);
        Integer[] comparisonArr38 = {818776261, 228568128, 1188949433, 77990075, 332747124, 955612091, 1562814634, 60305122, 127088126, 286087769, 637233199, 952456294, 1183004826, 1428508874, 2081284818, 217359470, 257581798, 933950708, 984627915, 1282755677, 1954834435, 2110441108, 1201333422, 1391191267, 1976842930};
        assertEquals(25, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr38));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1982256013);
        Integer[] comparisonArr39 = {818776261, 228568128, 1188949433, 77990075, 332747124, 955612091, 1562814634, 60305122, 127088126, 286087769, 637233199, 952456294, 1183004826, 1428508874, 2081284818, 217359470, 257581798, 933950708, 984627915, 1282755677, 1976842930, 2110441108, 1201333422, 1391191267, 1954834435, 1982256013};
        assertEquals(26, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr39));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(561047290);
        Integer[] comparisonArr40 = {818776261, 228568128, 1188949433, 77990075, 332747124, 955612091, 1562814634, 60305122, 127088126, 286087769, 637233199, 952456294, 1183004826, 1428508874, 2081284818, 217359470, 257581798, 561047290, 933950708, 984627915, 1282755677, 1976842930, 2110441108, 1201333422, 1391191267, 1954834435, 1982256013};
        assertEquals(27, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr40));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(438132693);
        Integer[] comparisonArr41 = {818776261, 228568128, 1188949433, 77990075, 332747124, 955612091, 1562814634, 60305122, 127088126, 286087769, 561047290, 952456294, 1183004826, 1428508874, 2081284818, 217359470, 257581798, 438132693, 637233199, 933950708, 984627915, 1282755677, 1976842930, 2110441108, 1201333422, 1391191267, 1954834435, 1982256013};
        assertEquals(28, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr41));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(903846795);
        Integer[] comparisonArr42 = {818776261, 228568128, 1188949433, 77990075, 332747124, 955612091, 1562814634, 60305122, 127088126, 286087769, 561047290, 933950708, 1183004826, 1428508874, 2081284818, 217359470, 257581798, 438132693, 637233199, 903846795, 952456294, 984627915, 1282755677, 1976842930, 2110441108, 1201333422, 1391191267, 1954834435, 1982256013};
        assertEquals(29, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr42));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(2069982657);
        Integer[] comparisonArr43 = {818776261, 228568128, 1188949433, 77990075, 332747124, 955612091, 1562814634, 60305122, 127088126, 286087769, 561047290, 933950708, 1183004826, 1428508874, 1982256013, 217359470, 257581798, 438132693, 637233199, 903846795, 952456294, 984627915, 1282755677, 1976842930, 2081284818, 1201333422, 1391191267, 1954834435, 2069982657, 2110441108};
        assertEquals(30, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr43));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 955612091, avlTree.remove(955612091));
        Integer[] comparisonArr44 = {818776261, 228568128, 1188949433, 77990075, 332747124, 952456294, 1562814634, 60305122, 127088126, 286087769, 561047290, 933950708, 1183004826, 1428508874, 1982256013, 217359470, 257581798, 438132693, 637233199, 903846795, 984627915, 1282755677, 1976842930, 2081284818, 1201333422, 1391191267, 1954834435, 2069982657, 2110441108};
        assertEquals(29, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr44));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1954834435, avlTree.remove(1954834435));
        Integer[] comparisonArr45 = {818776261, 228568128, 1188949433, 77990075, 332747124, 952456294, 1562814634, 60305122, 127088126, 286087769, 561047290, 933950708, 1183004826, 1428508874, 1982256013, 217359470, 257581798, 438132693, 637233199, 903846795, 984627915, 1282755677, 1976842930, 2081284818, 1201333422, 1391191267, 2069982657, 2110441108};
        assertEquals(28, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr45));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 2081284818, avlTree.remove(2081284818));
        Integer[] comparisonArr46 = {818776261, 228568128, 1188949433, 77990075, 332747124, 952456294, 1562814634, 60305122, 127088126, 286087769, 561047290, 933950708, 1183004826, 1428508874, 1982256013, 217359470, 257581798, 438132693, 637233199, 903846795, 984627915, 1282755677, 1976842930, 2069982657, 1201333422, 1391191267, 2110441108};
        assertEquals(27, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr46));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(582645931);
        Integer[] comparisonArr47 = {818776261, 228568128, 1188949433, 77990075, 332747124, 952456294, 1562814634, 60305122, 127088126, 286087769, 561047290, 933950708, 1183004826, 1428508874, 1982256013, 217359470, 257581798, 438132693, 637233199, 903846795, 984627915, 1282755677, 1976842930, 2069982657, 582645931, 1201333422, 1391191267, 2110441108};
        assertEquals(28, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr47));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 2069982657, avlTree.remove(2069982657));
        Integer[] comparisonArr48 = {818776261, 228568128, 1188949433, 77990075, 332747124, 952456294, 1562814634, 60305122, 127088126, 286087769, 561047290, 933950708, 1183004826, 1428508874, 1982256013, 217359470, 257581798, 438132693, 637233199, 903846795, 984627915, 1282755677, 1976842930, 2110441108, 582645931, 1201333422, 1391191267};
        assertEquals(27, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr48));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(4061261);
        Integer[] comparisonArr49 = {818776261, 228568128, 1188949433, 77990075, 332747124, 952456294, 1562814634, 60305122, 127088126, 286087769, 561047290, 933950708, 1183004826, 1428508874, 1982256013, 4061261, 217359470, 257581798, 438132693, 637233199, 903846795, 984627915, 1282755677, 1976842930, 2110441108, 582645931, 1201333422, 1391191267};
        assertEquals(28, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr49));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(2126219343);
        Integer[] comparisonArr50 = {818776261, 228568128, 1188949433, 77990075, 332747124, 952456294, 1562814634, 60305122, 127088126, 286087769, 561047290, 933950708, 1183004826, 1428508874, 1982256013, 4061261, 217359470, 257581798, 438132693, 637233199, 903846795, 984627915, 1282755677, 1976842930, 2110441108, 582645931, 1201333422, 1391191267, 2126219343};
        assertEquals(29, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr50));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1524934175);
        Integer[] comparisonArr51 = {818776261, 228568128, 1188949433, 77990075, 332747124, 952456294, 1562814634, 60305122, 127088126, 286087769, 561047290, 933950708, 1183004826, 1428508874, 1982256013, 4061261, 217359470, 257581798, 438132693, 637233199, 903846795, 984627915, 1282755677, 1524934175, 1976842930, 2110441108, 582645931, 1201333422, 1391191267, 2126219343};
        assertEquals(30, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr51));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1595852440);
        Integer[] comparisonArr52 = {818776261, 228568128, 1188949433, 77990075, 332747124, 952456294, 1562814634, 60305122, 127088126, 286087769, 561047290, 933950708, 1183004826, 1428508874, 1982256013, 4061261, 217359470, 257581798, 438132693, 637233199, 903846795, 984627915, 1282755677, 1524934175, 1976842930, 2110441108, 582645931, 1201333422, 1391191267, 1595852440, 2126219343};
        assertEquals(31, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr52));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(13835735);
        Integer[] comparisonArr53 = {818776261, 228568128, 1188949433, 77990075, 332747124, 952456294, 1562814634, 13835735, 127088126, 286087769, 561047290, 933950708, 1183004826, 1428508874, 1982256013, 4061261, 60305122, 217359470, 257581798, 438132693, 637233199, 903846795, 984627915, 1282755677, 1524934175, 1976842930, 2110441108, 582645931, 1201333422, 1391191267, 1595852440, 2126219343};
        assertEquals(32, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr53));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1692382490);
        Integer[] comparisonArr54 = {818776261, 228568128, 1188949433, 77990075, 332747124, 952456294, 1562814634, 13835735, 127088126, 286087769, 561047290, 933950708, 1183004826, 1428508874, 1982256013, 4061261, 60305122, 217359470, 257581798, 438132693, 637233199, 903846795, 984627915, 1282755677, 1524934175, 1692382490, 2110441108, 582645931, 1201333422, 1391191267, 1595852440, 1976842930, 2126219343};
        assertEquals(33, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr54));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1324476516);
        Integer[] comparisonArr55 = {818776261, 228568128, 1188949433, 77990075, 332747124, 952456294, 1562814634, 13835735, 127088126, 286087769, 561047290, 933950708, 1183004826, 1391191267, 1982256013, 4061261, 60305122, 217359470, 257581798, 438132693, 637233199, 903846795, 984627915, 1282755677, 1428508874, 1692382490, 2110441108, 582645931, 1201333422, 1324476516, 1524934175, 1595852440, 1976842930, 2126219343};
        assertEquals(34, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr55));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(282762675);
        Integer[] comparisonArr56 = {818776261, 228568128, 1188949433, 77990075, 332747124, 952456294, 1562814634, 13835735, 127088126, 282762675, 561047290, 933950708, 1183004826, 1391191267, 1982256013, 4061261, 60305122, 217359470, 257581798, 286087769, 438132693, 637233199, 903846795, 984627915, 1282755677, 1428508874, 1692382490, 2110441108, 582645931, 1201333422, 1324476516, 1524934175, 1595852440, 1976842930, 2126219343};
        assertEquals(35, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr56));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1950269571);
        Integer[] comparisonArr57 = {818776261, 228568128, 1562814634, 77990075, 332747124, 1188949433, 1982256013, 13835735, 127088126, 282762675, 561047290, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 60305122, 217359470, 257581798, 286087769, 438132693, 637233199, 933950708, 1183004826, 1282755677, 1428508874, 1595852440, 1976842930, 2126219343, 582645931, 903846795, 984627915, 1201333422, 1324476516, 1524934175, 1950269571};
        assertEquals(36, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr57));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1241201317);
        Integer[] comparisonArr58 = {818776261, 228568128, 1562814634, 77990075, 332747124, 1188949433, 1982256013, 13835735, 127088126, 282762675, 561047290, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 60305122, 217359470, 257581798, 286087769, 438132693, 637233199, 933950708, 1183004826, 1282755677, 1428508874, 1595852440, 1976842930, 2126219343, 582645931, 903846795, 984627915, 1201333422, 1324476516, 1524934175, 1950269571, 1241201317};
        assertEquals(37, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr58));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(968642161);
        Integer[] comparisonArr59 = {818776261, 228568128, 1562814634, 77990075, 332747124, 1188949433, 1982256013, 13835735, 127088126, 282762675, 561047290, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 60305122, 217359470, 257581798, 286087769, 438132693, 637233199, 933950708, 984627915, 1282755677, 1428508874, 1595852440, 1976842930, 2126219343, 582645931, 903846795, 968642161, 1183004826, 1201333422, 1324476516, 1524934175, 1950269571, 1241201317};
        assertEquals(38, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr59));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 60305122, avlTree.remove(60305122));
        Integer[] comparisonArr60 = {818776261, 228568128, 1562814634, 77990075, 332747124, 1188949433, 1982256013, 13835735, 127088126, 282762675, 561047290, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 257581798, 286087769, 438132693, 637233199, 933950708, 984627915, 1282755677, 1428508874, 1595852440, 1976842930, 2126219343, 582645931, 903846795, 968642161, 1183004826, 1201333422, 1324476516, 1524934175, 1950269571, 1241201317};
        assertEquals(37, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr60));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1084009659);
        Integer[] comparisonArr61 = {818776261, 228568128, 1562814634, 77990075, 332747124, 1188949433, 1982256013, 13835735, 127088126, 282762675, 561047290, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 257581798, 286087769, 438132693, 637233199, 933950708, 984627915, 1282755677, 1428508874, 1595852440, 1976842930, 2126219343, 582645931, 903846795, 968642161, 1183004826, 1201333422, 1324476516, 1524934175, 1950269571, 1084009659, 1241201317};
        assertEquals(38, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr61));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(739707561);
        Integer[] comparisonArr62 = {818776261, 228568128, 1562814634, 77990075, 332747124, 1188949433, 1982256013, 13835735, 127088126, 282762675, 561047290, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 257581798, 286087769, 438132693, 637233199, 933950708, 984627915, 1282755677, 1428508874, 1595852440, 1976842930, 2126219343, 582645931, 739707561, 903846795, 968642161, 1183004826, 1201333422, 1324476516, 1524934175, 1950269571, 1084009659, 1241201317};
        assertEquals(39, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr62));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 438132693, avlTree.remove(438132693));
        Integer[] comparisonArr63 = {818776261, 228568128, 1562814634, 77990075, 332747124, 1188949433, 1982256013, 13835735, 127088126, 282762675, 561047290, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 257581798, 286087769, 637233199, 933950708, 984627915, 1282755677, 1428508874, 1595852440, 1976842930, 2126219343, 582645931, 739707561, 903846795, 968642161, 1183004826, 1201333422, 1324476516, 1524934175, 1950269571, 1084009659, 1241201317};
        assertEquals(38, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr63));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1078447321);
        Integer[] comparisonArr64 = {818776261, 228568128, 1562814634, 77990075, 332747124, 1188949433, 1982256013, 13835735, 127088126, 282762675, 561047290, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 257581798, 286087769, 637233199, 933950708, 984627915, 1282755677, 1428508874, 1595852440, 1976842930, 2126219343, 582645931, 739707561, 903846795, 968642161, 1084009659, 1201333422, 1324476516, 1524934175, 1950269571, 1078447321, 1183004826, 1241201317};
        assertEquals(39, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr64));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(529976569);
        Integer[] comparisonArr65 = {818776261, 228568128, 1562814634, 77990075, 332747124, 1188949433, 1982256013, 13835735, 127088126, 282762675, 561047290, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 257581798, 286087769, 529976569, 637233199, 933950708, 984627915, 1282755677, 1428508874, 1595852440, 1976842930, 2126219343, 582645931, 739707561, 903846795, 968642161, 1084009659, 1201333422, 1324476516, 1524934175, 1950269571, 1078447321, 1183004826, 1241201317};
        assertEquals(40, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr65));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1249058880);
        Integer[] comparisonArr66 = {818776261, 228568128, 1562814634, 77990075, 332747124, 1188949433, 1982256013, 13835735, 127088126, 282762675, 561047290, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 257581798, 286087769, 529976569, 637233199, 933950708, 984627915, 1282755677, 1428508874, 1595852440, 1976842930, 2126219343, 582645931, 739707561, 903846795, 968642161, 1084009659, 1241201317, 1324476516, 1524934175, 1950269571, 1078447321, 1183004826, 1201333422, 1249058880};
        assertEquals(41, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr66));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1258451647);
        Integer[] comparisonArr67 = {818776261, 228568128, 1562814634, 77990075, 332747124, 1188949433, 1982256013, 13835735, 127088126, 282762675, 561047290, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 257581798, 286087769, 529976569, 637233199, 933950708, 984627915, 1249058880, 1428508874, 1595852440, 1976842930, 2126219343, 582645931, 739707561, 903846795, 968642161, 1084009659, 1241201317, 1282755677, 1524934175, 1950269571, 1078447321, 1183004826, 1201333422, 1258451647, 1324476516};
        assertEquals(42, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr67));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(696514983);
        Integer[] comparisonArr68 = {818776261, 228568128, 1562814634, 77990075, 332747124, 1188949433, 1982256013, 13835735, 127088126, 282762675, 637233199, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 257581798, 286087769, 561047290, 739707561, 933950708, 984627915, 1249058880, 1428508874, 1595852440, 1976842930, 2126219343, 529976569, 582645931, 696514983, 903846795, 968642161, 1084009659, 1241201317, 1282755677, 1524934175, 1950269571, 1078447321, 1183004826, 1201333422, 1258451647, 1324476516};
        assertEquals(43, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr68));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1534073354);
        Integer[] comparisonArr69 = {818776261, 228568128, 1562814634, 77990075, 332747124, 1188949433, 1982256013, 13835735, 127088126, 282762675, 637233199, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 257581798, 286087769, 561047290, 739707561, 933950708, 984627915, 1249058880, 1524934175, 1595852440, 1976842930, 2126219343, 529976569, 582645931, 696514983, 903846795, 968642161, 1084009659, 1241201317, 1282755677, 1428508874, 1534073354, 1950269571, 1078447321, 1183004826, 1201333422, 1258451647, 1324476516};
        assertEquals(44, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr69));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(879069732);
        Integer[] comparisonArr70 = {818776261, 228568128, 1562814634, 77990075, 332747124, 1188949433, 1982256013, 13835735, 127088126, 282762675, 637233199, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 257581798, 286087769, 561047290, 739707561, 903846795, 984627915, 1249058880, 1524934175, 1595852440, 1976842930, 2126219343, 529976569, 582645931, 696514983, 879069732, 933950708, 968642161, 1084009659, 1241201317, 1282755677, 1428508874, 1534073354, 1950269571, 1078447321, 1183004826, 1201333422, 1258451647, 1324476516};
        assertEquals(45, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr70));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(332827818);
        Integer[] comparisonArr71 = {818776261, 228568128, 1562814634, 77990075, 561047290, 1188949433, 1982256013, 13835735, 127088126, 332747124, 637233199, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 282762675, 529976569, 582645931, 739707561, 903846795, 984627915, 1249058880, 1524934175, 1595852440, 1976842930, 2126219343, 257581798, 286087769, 332827818, 696514983, 879069732, 933950708, 968642161, 1084009659, 1241201317, 1282755677, 1428508874, 1534073354, 1950269571, 1078447321, 1183004826, 1201333422, 1258451647, 1324476516};
        assertEquals(46, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr71));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1588953569);
        Integer[] comparisonArr72 = {818776261, 228568128, 1562814634, 77990075, 561047290, 1188949433, 1982256013, 13835735, 127088126, 332747124, 637233199, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 282762675, 529976569, 582645931, 739707561, 903846795, 984627915, 1249058880, 1524934175, 1595852440, 1976842930, 2126219343, 257581798, 286087769, 332827818, 696514983, 879069732, 933950708, 968642161, 1084009659, 1241201317, 1282755677, 1428508874, 1534073354, 1588953569, 1950269571, 1078447321, 1183004826, 1201333422, 1258451647, 1324476516};
        assertEquals(47, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr72));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1910854478);
        Integer[] comparisonArr73 = {818776261, 228568128, 1562814634, 77990075, 561047290, 1188949433, 1982256013, 13835735, 127088126, 332747124, 637233199, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 282762675, 529976569, 582645931, 739707561, 903846795, 984627915, 1249058880, 1524934175, 1595852440, 1950269571, 2126219343, 257581798, 286087769, 332827818, 696514983, 879069732, 933950708, 968642161, 1084009659, 1241201317, 1282755677, 1428508874, 1534073354, 1588953569, 1910854478, 1976842930, 1078447321, 1183004826, 1201333422, 1258451647, 1324476516};
        assertEquals(48, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr73));
        assertEquals(comparisonList, avlTree.levelorder());
        avlTree.add(1991802101);
        Integer[] comparisonArr74 = {818776261, 228568128, 1562814634, 77990075, 561047290, 1188949433, 1982256013, 13835735, 127088126, 332747124, 637233199, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 282762675, 529976569, 582645931, 739707561, 903846795, 984627915, 1249058880, 1524934175, 1595852440, 1950269571, 1991802101, 2126219343, 257581798, 286087769, 332827818, 696514983, 879069732, 933950708, 968642161, 1084009659, 1241201317, 1282755677, 1428508874, 1534073354, 1588953569, 1910854478, 1976842930, 1078447321, 1183004826, 1201333422, 1258451647, 1324476516};
        assertEquals(49, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr74));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 696514983, avlTree.remove(696514983));
        Integer[] comparisonArr75 = {818776261, 228568128, 1562814634, 77990075, 561047290, 1188949433, 1982256013, 13835735, 127088126, 332747124, 637233199, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 282762675, 529976569, 582645931, 739707561, 903846795, 984627915, 1249058880, 1524934175, 1595852440, 1950269571, 1991802101, 2126219343, 257581798, 286087769, 332827818, 879069732, 933950708, 968642161, 1084009659, 1241201317, 1282755677, 1428508874, 1534073354, 1588953569, 1910854478, 1976842930, 1078447321, 1183004826, 1201333422, 1258451647, 1324476516};
        assertEquals(48, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr75));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 818776261, avlTree.remove(818776261));
        Integer[] comparisonArr76 = {739707561, 228568128, 1562814634, 77990075, 561047290, 1188949433, 1982256013, 13835735, 127088126, 332747124, 637233199, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 282762675, 529976569, 582645931, 903846795, 984627915, 1249058880, 1524934175, 1595852440, 1950269571, 1991802101, 2126219343, 257581798, 286087769, 332827818, 879069732, 933950708, 968642161, 1084009659, 1241201317, 1282755677, 1428508874, 1534073354, 1588953569, 1910854478, 1976842930, 1078447321, 1183004826, 1201333422, 1258451647, 1324476516};
        assertEquals(47, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr76));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1183004826, avlTree.remove(1183004826));
        Integer[] comparisonArr77 = {739707561, 228568128, 1562814634, 77990075, 561047290, 1188949433, 1982256013, 13835735, 127088126, 332747124, 637233199, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 282762675, 529976569, 582645931, 903846795, 984627915, 1249058880, 1524934175, 1595852440, 1950269571, 1991802101, 2126219343, 257581798, 286087769, 332827818, 879069732, 933950708, 968642161, 1084009659, 1241201317, 1282755677, 1428508874, 1534073354, 1588953569, 1910854478, 1976842930, 1078447321, 1201333422, 1258451647, 1324476516};
        assertEquals(46, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr77));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 2126219343, avlTree.remove(2126219343));
        Integer[] comparisonArr78 = {739707561, 228568128, 1562814634, 77990075, 561047290, 1188949433, 1982256013, 13835735, 127088126, 332747124, 637233199, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 282762675, 529976569, 582645931, 903846795, 984627915, 1249058880, 1524934175, 1595852440, 1950269571, 1991802101, 257581798, 286087769, 332827818, 879069732, 933950708, 968642161, 1084009659, 1241201317, 1282755677, 1428508874, 1534073354, 1588953569, 1910854478, 1976842930, 1078447321, 1201333422, 1258451647, 1324476516};
        assertEquals(45, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr78));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 561047290, avlTree.remove(561047290));
        Integer[] comparisonArr79 = {739707561, 228568128, 1562814634, 77990075, 529976569, 1188949433, 1982256013, 13835735, 127088126, 332747124, 637233199, 952456294, 1391191267, 1692382490, 2110441108, 4061261, 217359470, 282762675, 582645931, 903846795, 984627915, 1249058880, 1524934175, 1595852440, 1950269571, 1991802101, 257581798, 286087769, 879069732, 933950708, 968642161, 1084009659, 1241201317, 1282755677, 1428508874, 1534073354, 1588953569, 1910854478, 1976842930, 1078447321, 1201333422, 1258451647, 1324476516};
        assertEquals(44, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr79));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 2110441108, avlTree.remove(2110441108));
        Integer[] comparisonArr80 = {739707561, 228568128, 1562814634, 77990075, 529976569, 1188949433, 1982256013, 13835735, 127088126, 332747124, 637233199, 952456294, 1391191267, 1692382490, 1991802101, 4061261, 217359470, 282762675, 582645931, 903846795, 984627915, 1249058880, 1524934175, 1595852440, 1950269571, 257581798, 286087769, 879069732, 933950708, 968642161, 1084009659, 1241201317, 1282755677, 1428508874, 1534073354, 1588953569, 1910854478, 1976842930, 1078447321, 1201333422, 1258451647, 1324476516};
        assertEquals(43, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr80));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 332747124, avlTree.remove(332747124));
        Integer[] comparisonArr81 = {739707561, 228568128, 1562814634, 77990075, 529976569, 1188949433, 1982256013, 13835735, 127088126, 282762675, 637233199, 952456294, 1391191267, 1692382490, 1991802101, 4061261, 217359470, 257581798, 286087769, 582645931, 903846795, 984627915, 1249058880, 1524934175, 1595852440, 1950269571, 879069732, 933950708, 968642161, 1084009659, 1241201317, 1282755677, 1428508874, 1534073354, 1588953569, 1910854478, 1976842930, 1078447321, 1201333422, 1258451647, 1324476516};
        assertEquals(42, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr81));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1078447321, avlTree.remove(1078447321));
        Integer[] comparisonArr82 = {739707561, 228568128, 1562814634, 77990075, 529976569, 1188949433, 1982256013, 13835735, 127088126, 282762675, 637233199, 952456294, 1391191267, 1692382490, 1991802101, 4061261, 217359470, 257581798, 286087769, 582645931, 903846795, 984627915, 1249058880, 1524934175, 1595852440, 1950269571, 879069732, 933950708, 968642161, 1084009659, 1241201317, 1282755677, 1428508874, 1534073354, 1588953569, 1910854478, 1976842930, 1201333422, 1258451647, 1324476516};
        assertEquals(41, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr82));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1562814634, avlTree.remove(1562814634));
        Integer[] comparisonArr83 = {739707561, 228568128, 1534073354, 77990075, 529976569, 1188949433, 1982256013, 13835735, 127088126, 282762675, 637233199, 952456294, 1391191267, 1692382490, 1991802101, 4061261, 217359470, 257581798, 286087769, 582645931, 903846795, 984627915, 1249058880, 1524934175, 1595852440, 1950269571, 879069732, 933950708, 968642161, 1084009659, 1241201317, 1282755677, 1428508874, 1588953569, 1910854478, 1976842930, 1201333422, 1258451647, 1324476516};
        assertEquals(40, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr83));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1249058880, avlTree.remove(1249058880));
        Integer[] comparisonArr84 = {739707561, 228568128, 1534073354, 77990075, 529976569, 1188949433, 1982256013, 13835735, 127088126, 282762675, 637233199, 952456294, 1391191267, 1692382490, 1991802101, 4061261, 217359470, 257581798, 286087769, 582645931, 903846795, 984627915, 1241201317, 1524934175, 1595852440, 1950269571, 879069732, 933950708, 968642161, 1084009659, 1201333422, 1282755677, 1428508874, 1588953569, 1910854478, 1976842930, 1258451647, 1324476516};
        assertEquals(39, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr84));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 228568128, avlTree.remove(228568128));
        Integer[] comparisonArr85 = {739707561, 217359470, 1534073354, 77990075, 529976569, 1188949433, 1982256013, 13835735, 127088126, 282762675, 637233199, 952456294, 1391191267, 1692382490, 1991802101, 4061261, 257581798, 286087769, 582645931, 903846795, 984627915, 1241201317, 1524934175, 1595852440, 1950269571, 879069732, 933950708, 968642161, 1084009659, 1201333422, 1282755677, 1428508874, 1588953569, 1910854478, 1976842930, 1258451647, 1324476516};
        assertEquals(38, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr85));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 903846795, avlTree.remove(903846795));
        Integer[] comparisonArr86 = {739707561, 217359470, 1534073354, 77990075, 529976569, 1188949433, 1982256013, 13835735, 127088126, 282762675, 637233199, 952456294, 1391191267, 1692382490, 1991802101, 4061261, 257581798, 286087769, 582645931, 879069732, 984627915, 1241201317, 1524934175, 1595852440, 1950269571, 933950708, 968642161, 1084009659, 1201333422, 1282755677, 1428508874, 1588953569, 1910854478, 1976842930, 1258451647, 1324476516};
        assertEquals(37, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr86));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1241201317, avlTree.remove(1241201317));
        Integer[] comparisonArr87 = {739707561, 217359470, 1534073354, 77990075, 529976569, 1188949433, 1982256013, 13835735, 127088126, 282762675, 637233199, 952456294, 1391191267, 1692382490, 1991802101, 4061261, 257581798, 286087769, 582645931, 879069732, 984627915, 1201333422, 1524934175, 1595852440, 1950269571, 933950708, 968642161, 1084009659, 1282755677, 1428508874, 1588953569, 1910854478, 1976842930, 1258451647, 1324476516};
        assertEquals(36, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr87));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1282755677, avlTree.remove(1282755677));
        Integer[] comparisonArr88 = {739707561, 217359470, 1534073354, 77990075, 529976569, 1188949433, 1982256013, 13835735, 127088126, 282762675, 637233199, 952456294, 1391191267, 1692382490, 1991802101, 4061261, 257581798, 286087769, 582645931, 879069732, 984627915, 1201333422, 1524934175, 1595852440, 1950269571, 933950708, 968642161, 1084009659, 1258451647, 1428508874, 1588953569, 1910854478, 1976842930, 1324476516};
        assertEquals(35, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr88));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1982256013, avlTree.remove(1982256013));
        Integer[] comparisonArr89 = {739707561, 217359470, 1534073354, 77990075, 529976569, 1188949433, 1976842930, 13835735, 127088126, 282762675, 637233199, 952456294, 1391191267, 1692382490, 1991802101, 4061261, 257581798, 286087769, 582645931, 879069732, 984627915, 1201333422, 1524934175, 1595852440, 1950269571, 933950708, 968642161, 1084009659, 1258451647, 1428508874, 1588953569, 1910854478, 1324476516};
        assertEquals(34, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr89));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 739707561, avlTree.remove(739707561));
        Integer[] comparisonArr90 = {637233199, 217359470, 1534073354, 77990075, 529976569, 1188949433, 1976842930, 13835735, 127088126, 282762675, 952456294, 1391191267, 1692382490, 1991802101, 4061261, 257581798, 286087769, 879069732, 984627915, 1201333422, 1524934175, 1595852440, 1950269571, 933950708, 968642161, 1084009659, 1258451647, 1428508874, 1588953569, 1910854478, 1324476516};
        assertEquals(33, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr90));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1188949433, avlTree.remove(1188949433));
        Integer[] comparisonArr91 = {637233199, 217359470, 1534073354, 77990075, 529976569, 1084009659, 1976842930, 13835735, 127088126, 282762675, 952456294, 1391191267, 1692382490, 1991802101, 4061261, 257581798, 286087769, 879069732, 984627915, 1201333422, 1524934175, 1595852440, 1950269571, 933950708, 968642161, 1258451647, 1428508874, 1588953569, 1910854478, 1324476516};
        assertEquals(32, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr91));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 257581798, avlTree.remove(257581798));
        Integer[] comparisonArr92 = {637233199, 217359470, 1534073354, 77990075, 529976569, 1084009659, 1976842930, 13835735, 127088126, 282762675, 952456294, 1391191267, 1692382490, 1991802101, 4061261, 286087769, 879069732, 984627915, 1201333422, 1524934175, 1595852440, 1950269571, 933950708, 968642161, 1258451647, 1428508874, 1588953569, 1910854478, 1324476516};
        assertEquals(31, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr92));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 77990075, avlTree.remove(77990075));
        Integer[] comparisonArr93 = {637233199, 217359470, 1534073354, 13835735, 529976569, 1084009659, 1976842930, 4061261, 127088126, 282762675, 952456294, 1391191267, 1692382490, 1991802101, 286087769, 879069732, 984627915, 1201333422, 1524934175, 1595852440, 1950269571, 933950708, 968642161, 1258451647, 1428508874, 1588953569, 1910854478, 1324476516};
        assertEquals(30, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr93));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 13835735, avlTree.remove(13835735));
        Integer[] comparisonArr94 = {637233199, 217359470, 1534073354, 4061261, 529976569, 1084009659, 1976842930, 127088126, 282762675, 952456294, 1391191267, 1692382490, 1991802101, 286087769, 879069732, 984627915, 1201333422, 1524934175, 1595852440, 1950269571, 933950708, 968642161, 1258451647, 1428508874, 1588953569, 1910854478, 1324476516};
        assertEquals(29, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr94));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 933950708, avlTree.remove(933950708));
        Integer[] comparisonArr95 = {637233199, 217359470, 1534073354, 4061261, 529976569, 1084009659, 1976842930, 127088126, 282762675, 952456294, 1391191267, 1692382490, 1991802101, 286087769, 879069732, 984627915, 1201333422, 1524934175, 1595852440, 1950269571, 968642161, 1258451647, 1428508874, 1588953569, 1910854478, 1324476516};
        assertEquals(28, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr95));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 286087769, avlTree.remove(286087769));
        Integer[] comparisonArr96 = {637233199, 217359470, 1534073354, 4061261, 529976569, 1084009659, 1976842930, 127088126, 282762675, 952456294, 1391191267, 1692382490, 1991802101, 879069732, 984627915, 1201333422, 1524934175, 1595852440, 1950269571, 968642161, 1258451647, 1428508874, 1588953569, 1910854478, 1324476516};
        assertEquals(27, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr96));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 637233199, avlTree.remove(637233199));
        Integer[] comparisonArr97 = {529976569, 217359470, 1534073354, 4061261, 1084009659, 1976842930, 127088126, 952456294, 1391191267, 1692382490, 1991802101, 879069732, 984627915, 1201333422, 1524934175, 1595852440, 1950269571, 968642161, 1258451647, 1428508874, 1588953569, 1910854478, 1324476516};
        assertEquals(26, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr97));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1324476516, avlTree.remove(1324476516));
        Integer[] comparisonArr98 = {529976569, 217359470, 1534073354, 4061261, 1084009659, 1976842930, 127088126, 952456294, 1391191267, 1692382490, 1991802101, 879069732, 984627915, 1201333422, 1524934175, 1595852440, 1950269571, 968642161, 1258451647, 1428508874, 1588953569, 1910854478};
        assertEquals(25, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr98));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 529976569, avlTree.remove(529976569));
        Integer[] comparisonArr99 = {217359470, 4061261, 1534073354, 127088126, 1084009659, 1976842930, 952456294, 1391191267, 1692382490, 1991802101, 879069732, 984627915, 1201333422, 1524934175, 1595852440, 1950269571, 968642161, 1258451647, 1428508874, 1588953569, 1910854478};
        assertEquals(24, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr99));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 952456294, avlTree.remove(952456294));
        Integer[] comparisonArr100 = {217359470, 4061261, 1534073354, 127088126, 1084009659, 1976842930, 879069732, 1391191267, 1692382490, 1991802101, 984627915, 1201333422, 1524934175, 1595852440, 1950269571, 968642161, 1258451647, 1428508874, 1588953569, 1910854478};
        assertEquals(23, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr100));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1910854478, avlTree.remove(1910854478));
        Integer[] comparisonArr101 = {217359470, 4061261, 1534073354, 127088126, 1084009659, 1976842930, 879069732, 1391191267, 1692382490, 1991802101, 984627915, 1201333422, 1524934175, 1595852440, 1950269571, 968642161, 1258451647, 1428508874, 1588953569};
        assertEquals(22, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr101));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1201333422, avlTree.remove(1201333422));
        Integer[] comparisonArr102 = {217359470, 4061261, 1534073354, 127088126, 1084009659, 1976842930, 879069732, 1391191267, 1692382490, 1991802101, 984627915, 1258451647, 1524934175, 1595852440, 1950269571, 968642161, 1428508874, 1588953569};
        assertEquals(21, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr102));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 879069732, avlTree.remove(879069732));
        Integer[] comparisonArr103 = {217359470, 4061261, 1534073354, 127088126, 1084009659, 1976842930, 984627915, 1391191267, 1692382490, 1991802101, 968642161, 1258451647, 1524934175, 1595852440, 1950269571, 1428508874, 1588953569};
        assertEquals(20, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr103));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 968642161, avlTree.remove(968642161));
        Integer[] comparisonArr104 = {217359470, 4061261, 1534073354, 127088126, 1084009659, 1976842930, 984627915, 1391191267, 1692382490, 1991802101, 1258451647, 1524934175, 1595852440, 1950269571, 1428508874, 1588953569};
        assertEquals(19, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr104));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1084009659, avlTree.remove(1084009659));
        Integer[] comparisonArr105 = {217359470, 4061261, 1534073354, 127088126, 984627915, 1976842930, 1391191267, 1692382490, 1991802101, 1258451647, 1524934175, 1595852440, 1950269571, 1428508874, 1588953569};
        assertEquals(18, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr105));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1391191267, avlTree.remove(1391191267));
        Integer[] comparisonArr106 = {217359470, 4061261, 1534073354, 127088126, 984627915, 1976842930, 1258451647, 1692382490, 1991802101, 1524934175, 1595852440, 1950269571, 1428508874, 1588953569};
        assertEquals(17, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr106));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1588953569, avlTree.remove(1588953569));
        Integer[] comparisonArr107 = {217359470, 4061261, 1534073354, 127088126, 984627915, 1976842930, 1258451647, 1692382490, 1991802101, 1524934175, 1595852440, 1950269571, 1428508874};
        assertEquals(16, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr107));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1534073354, avlTree.remove(1534073354));
        Integer[] comparisonArr108 = {217359470, 4061261, 1524934175, 127088126, 984627915, 1976842930, 1258451647, 1692382490, 1991802101, 1595852440, 1950269571};
        assertEquals(15, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr108));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 127088126, avlTree.remove(127088126));
        Integer[] comparisonArr109 = {217359470, 4061261, 1524934175, 984627915, 1976842930, 1258451647, 1692382490, 1991802101, 1595852440, 1950269571};
        assertEquals(14, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr109));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1258451647, avlTree.remove(1258451647));
        Integer[] comparisonArr110 = {217359470, 4061261, 1524934175, 984627915, 1976842930, 1692382490, 1991802101, 1595852440, 1950269571};
        assertEquals(13, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr110));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1524934175, avlTree.remove(1524934175));
        Integer[] comparisonArr111 = {217359470, 4061261, 984627915, 1976842930, 1692382490, 1991802101, 1595852440, 1950269571};
        assertEquals(12, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr111));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1991802101, avlTree.remove(1991802101));
        Integer[] comparisonArr112 = {217359470, 4061261, 984627915, 1976842930, 1692382490, 1595852440, 1950269571};
        assertEquals(11, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr112));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 217359470, avlTree.remove(217359470));
        Integer[] comparisonArr113 = {4061261, 984627915, 1976842930, 1692382490, 1595852440, 1950269571};
        assertEquals(10, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr113));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 4061261, avlTree.remove(4061261));
        Integer[] comparisonArr114 = {984627915, 1976842930, 1692382490, 1595852440, 1950269571};
        assertEquals(9, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr114));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1976842930, avlTree.remove(1976842930));
        Integer[] comparisonArr115 = {984627915, 1692382490, 1595852440, 1950269571};
        assertEquals(8, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr115));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1950269571, avlTree.remove(1950269571));
        Integer[] comparisonArr116 = {984627915, 1692382490, 1595852440};
        assertEquals(7, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr116));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 984627915, avlTree.remove(984627915));
        Integer[] comparisonArr117 = {1692382490, 1595852440};
        assertEquals(6, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr117));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1595852440, avlTree.remove(1595852440));
        Integer[] comparisonArr118 = {1692382490};
        assertEquals(5, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr118));
        assertEquals(comparisonList, avlTree.levelorder());
        assertEquals((Integer) 1692382490, avlTree.remove(1692382490));
        Integer[] comparisonArr119 = {};
        assertEquals(4, avlTree.size());
        comparisonList = new LinkedList<>(Arrays.asList(comparisonArr119));
        assertEquals(comparisonList, avlTree.levelorder());
    }
}